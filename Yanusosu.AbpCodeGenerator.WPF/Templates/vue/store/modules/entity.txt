/*
* 文  件 名 :    @(Model.CamelCaseName).ts
* 描      述 :   (Model.DisplayName)store定义
* 创建时间 :    @(@DateTime.Now.ToString())
* ===============================================================================
* @@ Yanusosu 2019. 
* ===============================================================================
*/

import { ActionContext } from "vuex";
import ListModule from "./list-module";
import ListState from "./list-state";
import Ajax from "../../lib/ajax";
import PageResult from "@@/store/entities/page-result";
import ListMutations from "./list-mutations";
import @(Model.Name) from "../entities/@(Model.SplitName)";

interface @(Model.Name)State extends ListState<@(Model.Name)> {
  edit@(Model.Name): @(Model.Name);
}

class @(Model.Name)Mutations extends ListMutations<@(Model.Name)> {}

class @(Model.Name)Module extends ListModule<@(Model.Name)State, any, @(Model.Name)> {
  state = {
    totalCount: 0,
    currentPage: 1,
    pageSize: 10,
    list: new Array<@(Model.Name)>(),
    loading: false,
    edit@(Model.Name): new @(Model.Name)()
  };

  actions = {
    async getAll(context: ActionContext<@(Model.Name)State, any>, payload: any) {
      context.state.loading = true;

      let response = await Ajax.get("/api/services/app/@(Model.Name)/GetAll", {
        params: payload.data
      });

      context.state.loading = false;
      let page = response.data.result as PageResult<@(Model.Name)>;
      context.state.totalCount = page.totalCount;
      context.state.list = page.items;
    },

    async get(context: ActionContext<@(Model.Name)State, any>, payload: any) {
      await Ajax.get("/api/services/app/@(Model.Name)/Get?Id=" + payload.data.id);
    },
    async create(context: ActionContext<@(Model.Name)State, any>, payload: any) {
      await Ajax.post("/api/services/app/@(Model.Name)/Create", payload.data);
    },
    async update(context: ActionContext<@(Model.Name)State, any>, payload: any) {
      await Ajax.put("/api/services/app/@(Model.Name)/Update", payload.data);
    },
    async delete(context: ActionContext<@(Model.Name)State, any>, payload: any) {
      await Ajax.delete(
        "/api/services/app/@(Model.Name)/Delete?Id=" + payload.data.id
      );
    }
  };

  mutations = {
    setCurrentPage(state: @(Model.Name)State, page: number) {
      state.currentPage = page;
    },
    setPageSize(state: @(Model.Name)State, pagesize: number) {
      state.pageSize = pagesize;
    },
    edit(state: @(Model.Name)State, @(Model.CamelCaseName): @(Model.Name)) {
      state.edit@(Model.Name) = @(Model.CamelCaseName);
    }
  };
}

const @(Model.CamelCaseName)Module = new @(Model.Name)Module();
export default @(Model.CamelCaseName)Module;
