using System;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
   @if(Model.EnableAuthorization){
@: using @(Model.Namespace).Permissions;
}
using @(Model.Namespace).Dtos;

namespace @(Model.Namespace)
{
    /// <summary>
    /// @(Model.DisplayName)服务
    /// </summary>
     @{
                if(Model.EnableAuthorization){
    @:[Authorize(@(Model.Name)AppPermissions.@(Model.Name))]
                }
            }
    public class @(Model.Name)AppService : CrudAppService<@(Model.Name),@(Model.Name)Dto,@(Model.EntityKeyName),Paged@(Model.Name)Input,Create@(Model.Name)Dto,Update@(Model.Name)Dto>, I@(Model.Name)AppService
    {
        public @(Model.Name)AppService(IRepository<@(Model.Name), @(Model.EntityKeyName)> repository) : base(repository)
        {
            @{
                if(Model.EnableAuthorization){
            @:GetListPolicyName = @(Model.Name)Permissions.@(Model.Name);
            @:GetPolicyName = @(Model.Name)Permissions.@(Model.Name);
            @:CreatePolicyName = @(Model.Name)Permissions.Create;
            @:UpdatePolicyName = @(Model.Name)Permissions.Update;
            @:DeletePolicyName = @(Model.Name)Permissions.Delete;
                }
            }
        }

        protected override async Task<IQueryable<@(Model.Name)>> CreateFilteredQueryAsync(Paged@(Model.Name)Input input)
        {
            var query = await base.CreateFilteredQueryAsync(input);

            return query
            // 自定义查询
            @{
            foreach(var item in Model.MetaColumnInfos){
                if(item.IsQueryVisible){
                    switch (item.StrDataType)
                    {
                        case "string":
            @:.WhereIf(!input.@(item.Name).IsNullOrEmpty(),p=>p.@(item.Name).Contains(input.@(item.Name)))
                        break;
                        default:
            @:.WhereIf(input.@(item.Name).HasValue,p=>p.@(item.Name) == input.@(item.Name))
                        break;
                    }
                }
            }
        }
            ;
        }
    }
}