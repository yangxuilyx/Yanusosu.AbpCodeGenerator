/*
* 文  件 名 :    @(Model.Name)AuthorizationProvider.cs
* 描      述 :    @(Model.DisplayName)权限提供者
* 创建时间 :    @(@DateTime.Now.ToString())
* ===============================================================================
* @@ Yanusosu 2019. 
* ===============================================================================
*/

using System.Linq;
using Abp.Authorization;
using Abp.Localization;
using @(Model.SolutionNameSpace).Authorization;

namespace @(Model.Namespace).Authorization
{
    public class @(Model.Name)AuthorizationProvider : AuthorizationProvider
    {
        public override void SetPermissions(IPermissionDefinitionContext context)
        {
            var pages = context.GetPermissionOrNull(PermissionNames.Pages) ?? context.CreatePermission(PermissionNames.Pages, L("Pages"));

            var module = pages.Children.FirstOrDefault(p => p.Name == "Pages.@(Model.ModuleName)")
                                  ?? pages.CreateChildPermission("Pages.@(Model.ModuleName)", L("@(Model.ModuleName)"));

            var @(Model.CamelCaseName) = module.CreateChildPermission(@(Model.Name)AppPermissions.@(Model.Name), L(@(Model.Name)AppPermissions.@(Model.Name)));
            @(Model.CamelCaseName).CreateChildPermission(@(Model.Name)AppPermissions.Create_@(Model.Name), L(@(Model.Name)AppPermissions.Create_@(Model.Name)));
            @(Model.CamelCaseName).CreateChildPermission(@(Model.Name)AppPermissions.Update_@(Model.Name), L(@(Model.Name)AppPermissions.Update_@(Model.Name)));
            @(Model.CamelCaseName).CreateChildPermission(@(Model.Name)AppPermissions.Delete_@(Model.Name), L(@(Model.Name)AppPermissions.Delete_@(Model.Name)));
        }

        private static ILocalizableString L(string name)
        {
            return new LocalizableString(name, @(Model.ConstName)Consts.LocalizationSourceName);
        }
    }
}